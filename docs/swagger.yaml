definitions:
  base.PageResp:
    properties:
      currentPage:
        description: 当前第几页
        type: integer
      list:
        description: 数据列表
      pageSize:
        description: 分页大小
        type: integer
      total:
        description: 总条数
        type: integer
    type: object
  base.ReqIds:
    properties:
      ids:
        description: 多id
        items:
          type: integer
        type: array
    type: object
  base.Resp:
    properties:
      code:
        description: 返回码
        type: integer
      data:
        description: 数据
      msg:
        description: 消息
        type: string
      reqId:
        description: '`json:"请求id"`'
        type: string
    type: object
  dto.DBReq:
    properties:
      dbName:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      tableName:
        type: string
    type: object
  dto.DbOption:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  dto.GenCodeReq:
    properties:
      force:
        type: boolean
      tableId:
        type: integer
    type: object
  dto.GenTablesGetPageReq:
    properties:
      dbName:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      tableName:
        type: string
    type: object
  dto.ImpTablesReq:
    properties:
      dbName:
        type: string
      tables:
        items:
          type: string
        type: array
    type: object
  models.GenColumns:
    properties:
      columnComment:
        type: string
      columnId:
        description: 主键
        type: integer
      columnName:
        type: string
      columnType:
        type: string
      createBy:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      dictType:
        type: string
      edit:
        type: integer
      fkLabelId:
        type: string
      fkLabelName:
        type: string
      fkTableName:
        type: string
      fkTableNameClass:
        type: string
      fkTableNamePackage:
        type: string
      goField:
        type: string
      goType:
        type: string
      htmlType:
        type: string
      increment:
        type: integer
      insert:
        type: boolean
      isEdit:
        type: string
      isIncrement:
        type: string
      isInsert:
        type: string
      isList:
        type: string
      isPk:
        type: string
      isQuery:
        type: string
      isRequired:
        type: string
      jsonField:
        type: string
      list:
        type: string
      pk:
        type: boolean
      query:
        type: integer
      queryType:
        type: string
      remark:
        type: string
      required:
        type: boolean
      sort:
        type: integer
      superColumn:
        type: integer
      tableId:
        type: integer
      tsType:
        type: string
      updateBy:
        type: integer
      updatedAt:
        description: 最后更新时间
        type: string
      usableColumn:
        type: integer
    type: object
  models.GenTables:
    properties:
      apiRoot:
        type: string
      businessName:
        type: string
      className:
        type: string
      columns:
        items:
          $ref: '#/definitions/models.GenColumns'
        type: array
      createBy:
        description: 创建者
        type: integer
      createdAt:
        description: 创建时间
        type: string
      crud:
        type: boolean
      dbName:
        type: string
      functionAuthor:
        type: string
      functionName:
        type: string
      isActions:
        type: integer
      isAuth:
        type: integer
      isDataScope:
        type: integer
      isLogicalDelete:
        type: string
      logicalDelete:
        type: boolean
      logicalDeleteColumn:
        type: string
      moduleFrontName:
        description: 前端文件名
        type: string
      moduleName:
        type: string
      options:
        type: string
      packageName:
        type: string
      pkColumn:
        type: string
      pkGoField:
        type: string
      pkJsonField:
        type: string
      remark:
        type: string
      tableComment:
        type: string
      tableId:
        description: 主键
        type: integer
      tableName:
        type: string
      tplCategory:
        type: string
      tree:
        type: integer
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
      updateBy:
        description: 更新者
        type: integer
      updatedAt:
        description: 最后更新时间
        type: string
    type: object
  utils.Cpu:
    properties:
      cores:
        type: integer
      cpus:
        items:
          type: number
        type: array
      usedPercent:
        type: number
    type: object
  utils.Disk:
    properties:
      totalGb:
        type: integer
      totalMb:
        type: integer
      usedGb:
        type: integer
      usedMb:
        type: integer
      usedPercent:
        type: integer
    type: object
  utils.Os:
    properties:
      compiler:
        type: string
      goVersion:
        type: string
      goos:
        type: string
      numCpu:
        type: integer
      numGoroutine:
        type: integer
    type: object
  utils.Ram:
    properties:
      totalMb:
        type: integer
      usedMb:
        type: integer
      usedPercent:
        type: integer
    type: object
  utils.Server:
    properties:
      cpu:
        $ref: '#/definitions/utils.Cpu'
      disk:
        $ref: '#/definitions/utils.Disk'
      os:
        $ref: '#/definitions/utils.Os'
      ram:
        $ref: '#/definitions/utils.Ram'
    type: object
info:
  contact:
    email: tusihao@gmail.com
    name: victor
    url: https://github.com/mooncake9527/orange
  description: 致力于做一个开发快速，运行稳定的框架
  title: orange API
  version: V0.0.1
paths:
  /api/v1/tools/gen/add:
    post:
      consumes:
      - application/json
      description: 添加表结构
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ImpTablesReq'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      summary: 添加表结构
      tags:
      - 工具 / 生成工具
  /api/v1/tools/gen/code:
    post:
      consumes:
      - application/json
      description: 生成代码
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GenCodeReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            type: string
      summary: 生成代码
      tags:
      - 工具 / 生成工具
  /api/v1/tools/gen/db/tables:
    post:
      description: 数据库表分页列表 / database table page list
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.DBReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/base.Resp'
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / 生成工具
  /api/v1/tools/gen/dbs:
    post:
      consumes:
      - application/json
      description: 获取配置的数据库
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/base.Resp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.DbOption'
                  type: array
              type: object
      summary: 获取配置的数据库
      tags:
      - 工具 / 生成工具
  /api/v1/tools/gen/del:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/base.ReqIds'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/base.Resp'
            - properties:
                data:
                  $ref: '#/definitions/models.GenTables'
              type: object
      summary: 删除GenTables
      tags:
      - 工具 / 生成工具
  /api/v1/tools/gen/page:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GenTablesGetPageReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/base.Resp'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/base.PageResp'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.GenTables'
                        type: array
                    type: object
              type: object
      summary: 获取GenTables列表
      tags:
      - 工具 / 生成工具
  /api/v1/tools/gen/update:
    post:
      consumes:
      - application/json
      description: 修改表结构
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.GenTables'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      summary: 修改表结构
      tags:
      - 工具 / 生成工具
  /api/v1/tools/monitor:
    post:
      consumes:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/base.Resp'
            - properties:
                data:
                  $ref: '#/definitions/utils.Server'
              type: object
      security:
      - Bearer: []
      summary: 监控
      tags:
      - 工具 / 监控
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
